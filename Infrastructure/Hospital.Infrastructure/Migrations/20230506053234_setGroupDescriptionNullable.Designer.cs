// <auto-generated />
using System;
using Hospital.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.Infrastructure.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20230506053234_setGroupDescriptionNullable")]
    partial class setGroupDescriptionNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Extension")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Attachment", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.BasicInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowChange")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedBasicInformationId")
                        .HasColumnType("int");

                    b.Property<string>("StrCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RelatedBasicInformationId");

                    b.ToTable("BasicInformation", "Gnr");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 1,
                            Code = 1,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6154),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6151),
                            Name = "Doctor",
                            Priority = 1,
                            StrCode = "Doctor"
                        },
                        new
                        {
                            Id = 102,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 1,
                            Code = 2,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6157),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6155),
                            Name = "Nurse",
                            Priority = 2,
                            StrCode = "Nurse"
                        },
                        new
                        {
                            Id = 103,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 1,
                            Code = 3,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6159),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6157),
                            Name = "Staff",
                            Priority = 3,
                            StrCode = "Staff"
                        },
                        new
                        {
                            Id = 201,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 2,
                            Code = 1,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6161),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6159),
                            Name = "Mr",
                            Priority = 1,
                            StrCode = "Mr"
                        },
                        new
                        {
                            Id = 202,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 2,
                            Code = 2,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6162),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6161),
                            Name = "Mrs",
                            Priority = 2,
                            StrCode = "Mrs"
                        },
                        new
                        {
                            Id = 701,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 7,
                            Code = 1,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6164),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6163),
                            Name = "Cash",
                            Priority = 1,
                            StrCode = "Cash"
                        },
                        new
                        {
                            Id = 702,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 7,
                            Code = 2,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6166),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6165),
                            Name = "Credit",
                            Priority = 2,
                            StrCode = "Credit"
                        },
                        new
                        {
                            Id = 801,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 8,
                            Code = 1,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6168),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6166),
                            Name = "Male",
                            Priority = 1,
                            StrCode = "Male"
                        },
                        new
                        {
                            Id = 802,
                            Active = true,
                            AllowChange = false,
                            AllowDelete = false,
                            CategoryId = 8,
                            Code = 2,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6170),
                            CreatedUser = "elias.sarband",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6169),
                            Name = "Female",
                            Priority = 2,
                            StrCode = "Female"
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.BasicInformationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RelatedCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Viewable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RelatedCategoryId");

                    b.ToTable("BasicInformationCategory", "Gnr");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "StaffType",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6118),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6116),
                            Name = "Staff Type",
                            Viewable = true
                        },
                        new
                        {
                            Id = 2,
                            Code = "NamePrefix",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6120),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6119),
                            Name = "Name Prefix",
                            Viewable = true
                        },
                        new
                        {
                            Id = 3,
                            Code = "Speciality",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6121),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6121),
                            Name = "Speciality",
                            Viewable = true
                        },
                        new
                        {
                            Id = 4,
                            Code = "Qualification",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6123),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6122),
                            Name = "Qualification",
                            Viewable = true
                        },
                        new
                        {
                            Id = 5,
                            Code = "City",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6124),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6123),
                            Name = "City",
                            Viewable = true
                        },
                        new
                        {
                            Id = 6,
                            Code = "Area",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6125),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6125),
                            Name = "Area",
                            RelatedCategoryId = 5,
                            Viewable = true
                        },
                        new
                        {
                            Id = 7,
                            Code = "PaymentType",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6127),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6126),
                            Name = "Payment Type",
                            Viewable = false
                        },
                        new
                        {
                            Id = 8,
                            Code = "Gender",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6129),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6127),
                            Name = "Gender",
                            Viewable = true
                        },
                        new
                        {
                            Id = 9,
                            Code = "Ward",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6130),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6130),
                            Name = "Ward",
                            Viewable = true
                        },
                        new
                        {
                            Id = 10,
                            Code = "CaseType",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6132),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6131),
                            Name = "Case Type",
                            Viewable = true
                        },
                        new
                        {
                            Id = 11,
                            Code = "Relationship",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6133),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6132),
                            Name = "Relationship",
                            Viewable = true
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bed", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int?>("MainDepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MainDepartmentId");

                    b.ToTable("Department", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("FormCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FormCategoryId");

                    b.ToTable("Form", "Sec");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Code = "Desktop",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6239),
                            Name = "Main Dashboard",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "Desktop"
                        },
                        new
                        {
                            Id = 102,
                            Code = "Appointment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6243),
                            Name = "Appointment",
                            Priority = 2,
                            ShowInMenu = true,
                            Url = "AppointmentDashboard"
                        },
                        new
                        {
                            Id = 103,
                            Code = "OPD",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6250),
                            Name = "OPD",
                            Priority = 3,
                            ShowInMenu = true,
                            Url = "OPDDashboard"
                        },
                        new
                        {
                            Id = 104,
                            Code = "IPD",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6251),
                            Name = "IPD",
                            Priority = 4,
                            ShowInMenu = true,
                            Url = "IPDDashboard"
                        },
                        new
                        {
                            Id = 105,
                            Code = "EPrecryption",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6252),
                            Name = "E-Precryption",
                            Priority = 5,
                            ShowInMenu = true,
                            Url = "EPrecryptionDashboard"
                        },
                        new
                        {
                            Id = 106,
                            Code = "Labratoy",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6253),
                            Name = "Labratoy",
                            Priority = 6,
                            ShowInMenu = true,
                            Url = "LabratoyDashboard"
                        },
                        new
                        {
                            Id = 107,
                            Code = "Pharmacy",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6254),
                            Name = "Pharmacy",
                            Priority = 7,
                            ShowInMenu = true,
                            Url = "PharmacyDashboard"
                        },
                        new
                        {
                            Id = 108,
                            Code = "Financial",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6255),
                            Name = "Financial",
                            Priority = 8,
                            ShowInMenu = true,
                            Url = "FinancialDashboard"
                        },
                        new
                        {
                            Id = 109,
                            Code = "HR",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6256),
                            Name = "Human Resources",
                            Priority = 9,
                            ShowInMenu = true,
                            Url = "HRDashboard"
                        },
                        new
                        {
                            Id = 110,
                            Code = "Reports",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 1,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6257),
                            Name = "Reports",
                            Priority = 10,
                            ShowInMenu = true,
                            Url = "ReportsDashboard"
                        },
                        new
                        {
                            Id = 301,
                            Code = "OPDPatients",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 3,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6258),
                            Name = "Patinet List",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "Patients"
                        },
                        new
                        {
                            Id = 302,
                            Code = "OPDPatinetDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 3,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6259),
                            Name = "Patinet Define",
                            Priority = 2,
                            ShowInMenu = false,
                            Url = "PatinetDefine"
                        },
                        new
                        {
                            Id = 303,
                            Code = "OPDBills",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 3,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6260),
                            Name = "OPD Billing List",
                            Priority = 3,
                            ShowInMenu = true,
                            Url = "OPDBills"
                        },
                        new
                        {
                            Id = 304,
                            Code = "OPDBillDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 3,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6261),
                            Name = "OPD Billing Define",
                            Priority = 4,
                            ShowInMenu = true,
                            Url = "OPDBillDefine"
                        },
                        new
                        {
                            Id = 305,
                            Code = "OPDBillPayments",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 3,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6262),
                            Name = "OPD Billing Payment",
                            Priority = 5,
                            ShowInMenu = false,
                            Url = "OPDBillPayments"
                        },
                        new
                        {
                            Id = 306,
                            Code = "DebtorOPDBills",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 3,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6263),
                            Name = "Receive Balance Payment",
                            Priority = 6,
                            ShowInMenu = true,
                            Url = "DebtorOPDBills"
                        },
                        new
                        {
                            Id = 401,
                            Code = "IPDPatients",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 4,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6264),
                            Name = "Patinet List",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "Patients"
                        },
                        new
                        {
                            Id = 402,
                            Code = "IPDPatinetDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 4,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6265),
                            Name = "Patinet Define",
                            Priority = 2,
                            ShowInMenu = false,
                            Url = "PatinetDefine"
                        },
                        new
                        {
                            Id = 403,
                            Code = "IPDRegisterations",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 4,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6269),
                            Name = "Admited Patinet List",
                            Priority = 3,
                            ShowInMenu = true,
                            Url = "IPDRegisterations"
                        },
                        new
                        {
                            Id = 404,
                            Code = "IPDRegisterationDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 4,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6270),
                            Name = "IPD Registeration",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "IPDRegisterationDefine"
                        },
                        new
                        {
                            Id = 1001,
                            Code = "ReportTemplates",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 10,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6271),
                            Name = "Report Template List",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "ReportTemplates"
                        },
                        new
                        {
                            Id = 1002,
                            Code = "ReportTemplateDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 10,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6272),
                            Name = "Report Template Define",
                            Priority = 2,
                            ShowInMenu = false,
                            Url = "ReportTemplateDefine"
                        },
                        new
                        {
                            Id = 1003,
                            Code = "ReportTemplateDesign",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 10,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6273),
                            Name = "Report Template Design",
                            Priority = 3,
                            ShowInMenu = false,
                            Url = "ReportTemplateDesign"
                        },
                        new
                        {
                            Id = 1004,
                            Code = "ReportShow",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 10,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6274),
                            Name = "Report Show",
                            Priority = 4,
                            ShowInMenu = false,
                            Url = "ReportShow"
                        },
                        new
                        {
                            Id = 1101,
                            Code = "HospitalInformation",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6275),
                            Name = "Hospital Information",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "HospitalInformation"
                        },
                        new
                        {
                            Id = 1102,
                            Code = "Departments",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6276),
                            Name = "Department List",
                            Priority = 2,
                            ShowInMenu = true,
                            Url = "Departments"
                        },
                        new
                        {
                            Id = 1103,
                            Code = "DepartmentDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6277),
                            Name = "Department Define",
                            Priority = 3,
                            ShowInMenu = false,
                            Url = "DepartmentDefine"
                        },
                        new
                        {
                            Id = 1104,
                            Code = "Services",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6278),
                            Name = "Service List",
                            Priority = 4,
                            ShowInMenu = true,
                            Url = "Services"
                        },
                        new
                        {
                            Id = 1105,
                            Code = "ServiceDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6279),
                            Name = "Service Define",
                            Priority = 5,
                            ShowInMenu = false,
                            Url = "ServiceDefine"
                        },
                        new
                        {
                            Id = 1106,
                            Code = "Consultants",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6280),
                            Name = "Consultant List",
                            Priority = 6,
                            ShowInMenu = true,
                            Url = "Consultants"
                        },
                        new
                        {
                            Id = 1107,
                            Code = "ConsultantDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6281),
                            Name = "Consultant Define",
                            Priority = 7,
                            ShowInMenu = false,
                            Url = "ConsultantDefine"
                        },
                        new
                        {
                            Id = 1108,
                            Code = "ConsultantTimings",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6282),
                            Name = "Consultant Timing List",
                            Priority = 8,
                            ShowInMenu = true,
                            Url = "ConsultantTimings"
                        },
                        new
                        {
                            Id = 1109,
                            Code = "ConsultantTimingDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6283),
                            Name = "Consultant Timing Define",
                            Priority = 9,
                            ShowInMenu = false,
                            Url = "ConsultantTimingDefine"
                        },
                        new
                        {
                            Id = 1110,
                            Code = "RefferBies",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6284),
                            Name = "Reffer By List",
                            Priority = 10,
                            ShowInMenu = true,
                            Url = "RefferBies"
                        },
                        new
                        {
                            Id = 1111,
                            Code = "RefferByDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6285),
                            Name = "Reffer By Define",
                            Priority = 11,
                            ShowInMenu = false,
                            Url = "RefferByDefine"
                        },
                        new
                        {
                            Id = 1112,
                            Code = "Medicines",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6287),
                            Name = "Medicine List",
                            Priority = 12,
                            ShowInMenu = true,
                            Url = "Medicines"
                        },
                        new
                        {
                            Id = 1113,
                            Code = "MedicineDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6288),
                            Name = "Medicine Define",
                            Priority = 13,
                            ShowInMenu = false,
                            Url = "MedicineDefine"
                        },
                        new
                        {
                            Id = 1114,
                            Code = "RoomTypes",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6289),
                            Name = "Room Type List",
                            Priority = 14,
                            ShowInMenu = true,
                            Url = "RoomTypes"
                        },
                        new
                        {
                            Id = 1115,
                            Code = "RoomTypeDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6290),
                            Name = "Room Type Define",
                            Priority = 15,
                            ShowInMenu = false,
                            Url = "RoomTypeDefine"
                        },
                        new
                        {
                            Id = 1116,
                            Code = "Rooms",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6291),
                            Name = "Room List",
                            Priority = 16,
                            ShowInMenu = true,
                            Url = "Rooms"
                        },
                        new
                        {
                            Id = 1117,
                            Code = "RoomDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6292),
                            Name = "Room Define",
                            Priority = 17,
                            ShowInMenu = false,
                            Url = "RoomDefine"
                        },
                        new
                        {
                            Id = 1118,
                            Code = "Beds",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6293),
                            Name = "Bed List",
                            Priority = 18,
                            ShowInMenu = true,
                            Url = "Beds"
                        },
                        new
                        {
                            Id = 1119,
                            Code = "BedDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6294),
                            Name = "Bed Define",
                            Priority = 19,
                            ShowInMenu = false,
                            Url = "BedDefine"
                        },
                        new
                        {
                            Id = 1120,
                            Code = "Insurances",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6295),
                            Name = "Insurance List",
                            Priority = 20,
                            ShowInMenu = true,
                            Url = "Insurances"
                        },
                        new
                        {
                            Id = 1121,
                            Code = "InsuranceDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6297),
                            Name = "Insurance Define",
                            Priority = 21,
                            ShowInMenu = false,
                            Url = "InsuranceDefine"
                        },
                        new
                        {
                            Id = 1122,
                            Code = "InsuranceAgreements",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6298),
                            Name = "InsuranceAgreement List",
                            Priority = 22,
                            ShowInMenu = true,
                            Url = "InsuranceAgreements"
                        },
                        new
                        {
                            Id = 1123,
                            Code = "InsuranceAgreementDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6299),
                            Name = "Insurance Agreement Define",
                            Priority = 23,
                            ShowInMenu = false,
                            Url = "InsuranceAgreementDefine"
                        },
                        new
                        {
                            Id = 1124,
                            Code = "Cities",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6300),
                            Name = "City List",
                            Priority = 24,
                            ShowInMenu = true,
                            Url = "BasicInformations/City"
                        },
                        new
                        {
                            Id = 1125,
                            Code = "CityDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6301),
                            Name = "City Define",
                            Priority = 25,
                            ShowInMenu = false,
                            Url = "CityDefine"
                        },
                        new
                        {
                            Id = 1126,
                            Code = "Areas",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6302),
                            Name = "Area List",
                            Priority = 26,
                            ShowInMenu = true,
                            Url = "BasicInformations/Area"
                        },
                        new
                        {
                            Id = 1127,
                            Code = "AreaDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6303),
                            Name = "Area Define",
                            Priority = 27,
                            ShowInMenu = false,
                            Url = "AreaDefine"
                        },
                        new
                        {
                            Id = 1128,
                            Code = "BasicInformationCategories",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6304),
                            Name = "Basic Information Category List",
                            Priority = 28,
                            ShowInMenu = true,
                            Url = "BasicInformationCategories"
                        },
                        new
                        {
                            Id = 1129,
                            Code = "BasicInformationCategoryDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6307),
                            Name = "Basic Information Category Define",
                            Priority = 29,
                            ShowInMenu = false,
                            Url = "BasicInformationCategoryDefine"
                        },
                        new
                        {
                            Id = 1130,
                            Code = "BasicInformations",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6308),
                            Name = "Basic Information List",
                            Priority = 30,
                            ShowInMenu = true,
                            Url = "BasicInformations"
                        },
                        new
                        {
                            Id = 1131,
                            Code = "BasicInformationDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6309),
                            Name = "Basic Information Define",
                            Priority = 31,
                            ShowInMenu = false,
                            Url = "BasicInformationDefine"
                        },
                        new
                        {
                            Id = 1132,
                            Code = "Settings",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 11,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6310),
                            Name = "Setting",
                            Priority = 32,
                            ShowInMenu = true,
                            Url = "Settings"
                        },
                        new
                        {
                            Id = 1201,
                            Code = "Users",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6311),
                            Name = "User List",
                            Priority = 1,
                            ShowInMenu = true,
                            Url = "Users"
                        },
                        new
                        {
                            Id = 1202,
                            Code = "UserDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6312),
                            Name = "User Define",
                            Priority = 2,
                            ShowInMenu = false,
                            Url = "UserDefine"
                        },
                        new
                        {
                            Id = 1203,
                            Code = "ChangePassword",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6313),
                            Name = "Change Password",
                            Priority = 3,
                            ShowInMenu = true,
                            Url = "ChangePassword"
                        },
                        new
                        {
                            Id = 1204,
                            Code = "Groups",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6314),
                            Name = "Group List",
                            Priority = 4,
                            ShowInMenu = true,
                            Url = "Groups"
                        },
                        new
                        {
                            Id = 1205,
                            Code = "GroupDefine",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6315),
                            Name = "Group Define",
                            Priority = 5,
                            ShowInMenu = false,
                            Url = "GroupDefine"
                        },
                        new
                        {
                            Id = 1206,
                            Code = "UserAccess",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6316),
                            Name = "User Access",
                            Priority = 6,
                            ShowInMenu = true,
                            Url = "UserAccess"
                        },
                        new
                        {
                            Id = 1207,
                            Code = "GroupAccess",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormCategoryId = 12,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6317),
                            Name = "Group Access",
                            Priority = 7,
                            ShowInMenu = false,
                            Url = "GroupAccess"
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.FormAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FormAction", "Sec");

                    b.HasData(
                        new
                        {
                            Id = 10101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 101,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6348),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10102,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 102,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6350),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10103,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 103,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6351),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10104,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 104,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6352),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10105,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 105,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6353),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10106,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 106,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6354),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10107,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 107,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6354),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10108,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 108,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6356),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10109,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 109,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6357),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 10110,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 110,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6357),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 301,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6358),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30102,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 301,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6359),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 30103,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 301,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6361),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 30104,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 301,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6361),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 30105,
                            Code = "Select",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 301,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6362),
                            Name = "Select",
                            Priority = 5
                        },
                        new
                        {
                            Id = 30201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 302,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6364),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30202,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 302,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6365),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 30301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6366),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30302,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6366),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 30303,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6367),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 30304,
                            Code = "Cancel",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6368),
                            Name = "Cancel",
                            Priority = 4
                        },
                        new
                        {
                            Id = 30305,
                            Code = "Select",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6369),
                            Name = "Select",
                            Priority = 5
                        },
                        new
                        {
                            Id = 30306,
                            Code = "Print",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6370),
                            Name = "Print",
                            Priority = 6
                        },
                        new
                        {
                            Id = 30307,
                            Code = "Payment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 303,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6371),
                            Name = "Payment",
                            Priority = 7
                        },
                        new
                        {
                            Id = 30401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6371),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30402,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6372),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 30403,
                            Code = "Print",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6373),
                            Name = "Print",
                            Priority = 3
                        },
                        new
                        {
                            Id = 30404,
                            Code = "AddPatient",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6374),
                            Name = "Add Patient",
                            Priority = 4
                        },
                        new
                        {
                            Id = 30405,
                            Code = "SearchPatient",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6376),
                            Name = "Search Patient",
                            Priority = 5
                        },
                        new
                        {
                            Id = 30406,
                            Code = "AddService",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6376),
                            Name = "Add Service",
                            Priority = 6
                        },
                        new
                        {
                            Id = 30407,
                            Code = "DeleteService",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 304,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6378),
                            Name = "Delete Service",
                            Priority = 7
                        },
                        new
                        {
                            Id = 30501,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 305,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6379),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30502,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 305,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6380),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 30503,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 305,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6381),
                            Name = "Delete",
                            Priority = 3
                        },
                        new
                        {
                            Id = 30504,
                            Code = "Print",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 305,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6381),
                            Name = "Print",
                            Priority = 4
                        },
                        new
                        {
                            Id = 30601,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 306,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6382),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 30602,
                            Code = "Payment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 306,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6385),
                            Name = "Payment",
                            Priority = 2
                        },
                        new
                        {
                            Id = 40101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 401,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6386),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 40102,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 401,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6387),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 40103,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 401,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6387),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 40104,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 401,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6388),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 40105,
                            Code = "Select",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 401,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6389),
                            Name = "Select",
                            Priority = 5
                        },
                        new
                        {
                            Id = 40201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 402,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6390),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 40202,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 402,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6391),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 40301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 403,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6392),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 40302,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 403,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6392),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 40303,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 403,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6393),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 40304,
                            Code = "Cancel",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 403,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6394),
                            Name = "Cancel",
                            Priority = 4
                        },
                        new
                        {
                            Id = 40305,
                            Code = "Discharge",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 403,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6395),
                            Name = "Discharge",
                            Priority = 5
                        },
                        new
                        {
                            Id = 40306,
                            Code = "Print",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 403,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6397),
                            Name = "Print",
                            Priority = 6
                        },
                        new
                        {
                            Id = 40401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6397),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 40402,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6398),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 40403,
                            Code = "Print",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6399),
                            Name = "Print",
                            Priority = 3
                        },
                        new
                        {
                            Id = 40404,
                            Code = "AddPatient",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6400),
                            Name = "Add Patient",
                            Priority = 4
                        },
                        new
                        {
                            Id = 40405,
                            Code = "SearchPatient",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6401),
                            Name = "Search Patient",
                            Priority = 5
                        },
                        new
                        {
                            Id = 40406,
                            Code = "SearchOPD",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6401),
                            Name = "Search OPD Billing",
                            Priority = 6
                        },
                        new
                        {
                            Id = 40407,
                            Code = "AddRoom",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6402),
                            Name = "Add Room",
                            Priority = 7
                        },
                        new
                        {
                            Id = 40408,
                            Code = "DeleteRoom",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6403),
                            Name = "Delete Room",
                            Priority = 8
                        },
                        new
                        {
                            Id = 40409,
                            Code = "AddService",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6404),
                            Name = "Add Service",
                            Priority = 9
                        },
                        new
                        {
                            Id = 40410,
                            Code = "DeleteService",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6405),
                            Name = "Delete Service",
                            Priority = 10
                        },
                        new
                        {
                            Id = 40411,
                            Code = "AddPayment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6406),
                            Name = "Add Payment",
                            Priority = 11
                        },
                        new
                        {
                            Id = 40412,
                            Code = "DeletePayment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6406),
                            Name = "Delete Payment",
                            Priority = 12
                        },
                        new
                        {
                            Id = 40413,
                            Code = "PrintPayment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 404,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6407),
                            Name = "Print Payment",
                            Priority = 13
                        },
                        new
                        {
                            Id = 100101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1001,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6408),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 100102,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1001,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6409),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 100103,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1001,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6415),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 100104,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1001,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6416),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 100105,
                            Code = "Design",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1001,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6417),
                            Name = "Design",
                            Priority = 5
                        },
                        new
                        {
                            Id = 100201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1002,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6417),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 100202,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1002,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6418),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 100301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1003,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6420),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 100401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1004,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6420),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1101,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6421),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110102,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1101,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6422),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1102,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6423),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110202,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1102,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6424),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110203,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1102,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6425),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 110204,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1102,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6426),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 110301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1103,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6427),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110302,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1103,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6428),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1104,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6429),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110402,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1104,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6430),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110403,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1104,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6431),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 110404,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1104,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6432),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 110501,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1105,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6432),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110502,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1105,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6433),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110601,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1106,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6434),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110602,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1106,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6435),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110603,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1106,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6436),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 110604,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1106,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6437),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 110701,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1107,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6437),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110702,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1107,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6439),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110801,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1108,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6440),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110802,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1108,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6441),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 110803,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1108,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6442),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 110804,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1108,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6442),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 110901,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1109,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6443),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 110902,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1109,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6444),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111001,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1110,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6445),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111002,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1110,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6446),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111003,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1110,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6447),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 111004,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1110,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6447),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 111101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1111,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6448),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111102,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1111,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6449),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1112,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6450),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111202,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1112,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6451),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111203,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1112,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6452),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 111204,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1112,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6452),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 111301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1113,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6453),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111302,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1113,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6454),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1114,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6455),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111402,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1114,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6456),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111403,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1114,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6457),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 111404,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1114,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6458),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 111501,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1115,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6459),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111502,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1115,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6460),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111601,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1116,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6461),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111602,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1116,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6463),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111603,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1116,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6463),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 111604,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1116,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6464),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 111701,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1117,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6465),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111702,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1117,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6466),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111801,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1118,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6467),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111802,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1118,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6467),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 111803,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1118,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6468),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 111804,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1118,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6469),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 111901,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1119,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6470),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 111902,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1119,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6471),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112001,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1120,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6472),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112002,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1120,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6472),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112003,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1120,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6473),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 112004,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1120,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6474),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 112101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1121,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6475),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112102,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1121,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6476),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1122,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6478),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112202,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1122,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6479),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112203,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1122,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6479),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 112204,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1122,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6480),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 112301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1123,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6481),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112302,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1123,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6482),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1124,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6483),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112402,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1124,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6484),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112403,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1124,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6484),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 112404,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1124,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6485),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 112501,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1125,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6486),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112502,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1125,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6488),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112601,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1126,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6488),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112602,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1126,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6489),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112603,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1126,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6490),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 112604,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1126,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6491),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 112701,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1127,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6497),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112702,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1127,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6497),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112801,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1128,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6498),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112802,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1128,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6499),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 112803,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1128,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6500),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 112804,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1128,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6504),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 112901,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1129,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6505),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 112902,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1129,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6506),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 113001,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1130,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6506),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 113002,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1130,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6507),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 113003,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1130,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6508),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 113004,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1130,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6509),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 113101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1131,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6510),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 113102,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1131,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6511),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 113201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1132,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6512),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 113202,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1132,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6512),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120101,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1201,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6513),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120102,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1201,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6514),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120103,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1201,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6515),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 120104,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1201,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6516),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 120105,
                            Code = "Reset",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1201,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6517),
                            Name = "Reset Password",
                            Priority = 5
                        },
                        new
                        {
                            Id = 120106,
                            Code = "Access",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1201,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6518),
                            Name = "User Access",
                            Priority = 6
                        },
                        new
                        {
                            Id = 120201,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1202,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6519),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120202,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1202,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6519),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120301,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1203,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6520),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120302,
                            Code = "Change",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1203,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6521),
                            Name = "Change Password",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120401,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1204,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6522),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120402,
                            Code = "Add",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1204,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6523),
                            Name = "Add",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120403,
                            Code = "Edit",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1204,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6524),
                            Name = "Edit",
                            Priority = 3
                        },
                        new
                        {
                            Id = 120404,
                            Code = "Delete",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1204,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6524),
                            Name = "Delete",
                            Priority = 4
                        },
                        new
                        {
                            Id = 120405,
                            Code = "Access",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1204,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6525),
                            Name = "Group Access",
                            Priority = 5
                        },
                        new
                        {
                            Id = 120501,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1205,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6526),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120502,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1205,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6527),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120601,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1206,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6528),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120602,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1206,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6528),
                            Name = "Save",
                            Priority = 2
                        },
                        new
                        {
                            Id = 120701,
                            Code = "View",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1207,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6529),
                            Name = "View",
                            Priority = 1
                        },
                        new
                        {
                            Id = 120702,
                            Code = "Save",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1207,
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6530),
                            Name = "Save",
                            Priority = 2
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.FormActionAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormActionId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormActionId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("FormActionAccess", "Sec");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.FormCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("ShowInDashboard")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FormCategory", "Sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Dashboards",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6208),
                            Name = "Dashboards",
                            Priority = 1,
                            ShowInDashboard = false
                        },
                        new
                        {
                            Id = 2,
                            Code = "Appointment",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6210),
                            Name = "Appointment",
                            Priority = 2,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 3,
                            Code = "OPD",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6211),
                            Name = "OPD",
                            Priority = 3,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 4,
                            Code = "IPD",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6212),
                            Name = "IPD",
                            Priority = 4,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 5,
                            Code = "EPrecryption",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6213),
                            Name = "E-Precryption",
                            Priority = 5,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 6,
                            Code = "Labratoy",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6214),
                            Name = "Labratoy",
                            Priority = 6,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 7,
                            Code = "Pharmacy",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6215),
                            Name = "Pharmacy",
                            Priority = 7,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 8,
                            Code = "Financial",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6216),
                            Name = "Financial",
                            Priority = 8,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 9,
                            Code = "HR",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6217),
                            Name = "Human Resoutces",
                            Priority = 9,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 10,
                            Code = "Reports",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6217),
                            Name = "Reports",
                            Priority = 10,
                            ShowInDashboard = true
                        },
                        new
                        {
                            Id = 11,
                            Code = "Setting",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6218),
                            Name = "Setting",
                            Priority = 11,
                            ShowInDashboard = false
                        },
                        new
                        {
                            Id = 12,
                            Code = "Security",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6219),
                            Name = "Security",
                            Priority = 12,
                            ShowInDashboard = false
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Group", "Sec");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.GroupUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupUser", "Sec");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.HospitalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackupDirectory1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BackupDirectory2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCents")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegisterationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SessionTimeout")
                        .HasColumnType("int");

                    b.Property<byte[]>("WhiteLogo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("HospitalInformation", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisteration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agreement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BedId")
                        .HasColumnType("int");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<int?>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsultantInchargeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DischargeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Discharged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OPDBillId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PayableAmount")
                        .HasColumnType("int");

                    b.Property<int?>("PrintCount")
                        .HasColumnType("int");

                    b.Property<int?>("RefferById")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondConsultantId")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdConsultantId")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int?>("WardId")
                        .HasColumnType("int");

                    b.Property<string>("WitnessName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("ConsultantInchargeId");

                    b.HasIndex("PatientId");

                    b.HasIndex("RefferById");

                    b.HasIndex("RelationshipId");

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.HasIndex("SecondConsultantId");

                    b.HasIndex("ThirdConsultantId");

                    b.HasIndex("WardId");

                    b.ToTable("IPDRegisteration", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisterationPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IPDRegisterationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IPDRegisterationId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("IPDRegisterationPayment", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisterationRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BedId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IPDRegisterationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.HasIndex("IPDRegisterationId");

                    b.ToTable("IPDRegisterationRoom", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisterationService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int?>("IPDRegisterationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IPDRegisterationId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("IPDRegisterationService", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvancePaymentAmount")
                        .HasColumnType("int");

                    b.Property<int>("AdvancePaymentPercent")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IPDDiscountPercent")
                        .HasColumnType("int");

                    b.Property<int>("InsurancePaymentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<int>("OPDDiscountPercent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsurancePaymentTypeId");

                    b.ToTable("Insurance", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.InsuranceAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShowWarningBefore")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("InsuranceId");

                    b.ToTable("InsuranceAgreement", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaidAmount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PayableAmount")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PrintCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("OPDBill", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBillPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OPDBillId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OPDBillId");

                    b.ToTable("OPDBillPayment", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBillService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OPDBillId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OPDBillId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("OPDBillService", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<string>("InsuranceNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("NamePrefixId")
                        .HasColumnType("int");

                    b.Property<string>("NationalIdCart")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ProposalNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RefferById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("NamePrefixId");

                    b.HasIndex("RefferById");

                    b.ToTable("Patient", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.RefferBy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IPDAmount")
                        .HasColumnType("int");

                    b.Property<int?>("IPDPercent")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("NamePrefixId")
                        .HasColumnType("int");

                    b.Property<int?>("OPDAmount")
                        .HasColumnType("int");

                    b.Property<int?>("OPDPercent")
                        .HasColumnType("int");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CityId");

                    b.HasIndex("NamePrefixId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("SpecialityId");

                    b.HasIndex("StaffTypeId");

                    b.ToTable("RefferBy", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.ReportTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ReportTemplate", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Role", "Sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Super",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 828, DateTimeKind.Local).AddTicks(7088),
                            CreatedUser = "elias.sarband",
                            Description = "",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 828, DateTimeKind.Local).AddTicks(7073),
                            Name = "Super Admin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "User",
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 828, DateTimeKind.Local).AddTicks(7090),
                            CreatedUser = "elias.sarband",
                            Description = "",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 828, DateTimeKind.Local).AddTicks(7089),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<int>("Rest")
                        .HasColumnType("int");

                    b.Property<int?>("RoomTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<int?>("WardId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WardId");

                    b.ToTable("RoomType", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddAmount")
                        .HasColumnType("int");

                    b.Property<int?>("AddPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountAmount")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("IPDRate")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<int?>("OPDRate")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Service", "Gnr");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Setting", "Gnr");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6192),
                            CreatedUser = "elias.sarband",
                            Key = "PatientIdPrefix",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6189),
                            Name = "Patient Identifier Prefix",
                            Value = "P"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6193),
                            CreatedUser = "elias.sarband",
                            Key = "OPDReceiptNoPrefix",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6193),
                            Name = "OPD Receipt Identifier Prefix",
                            Value = "OP"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6195),
                            CreatedUser = "elias.sarband",
                            Key = "IPDNoPrefix",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6194),
                            Name = "IPD No Prefix",
                            Value = "IP"
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IPDChargePercent")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("NamePrefixId")
                        .HasColumnType("int");

                    b.Property<int?>("NightIPDChargePercent")
                        .HasColumnType("int");

                    b.Property<int?>("NightOPDChargePercent")
                        .HasColumnType("int");

                    b.Property<int?>("OPDChargePercent")
                        .HasColumnType("int");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CityId");

                    b.HasIndex("NamePrefixId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("SpecialityId");

                    b.HasIndex("StaffTypeId");

                    b.ToTable("Staff", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.StaffTiming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("WeekDayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WeekDayNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffTiming", "Med");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.ToTable("User", "Sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 829, DateTimeKind.Local).AddTicks(7430),
                            CreatedUser = "elias.sarband",
                            Email = "elias.sarband@gmail.com",
                            FirstName = "Elias",
                            LastName = "Sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 828, DateTimeKind.Local).AddTicks(7253),
                            Password = "SEIE/b+BtdSahkhMsl4KK3SuEjCF1OKUEn4oQYMaYSc=",
                            PhoneNumber = "9125056182",
                            Theme = "Light",
                            Username = "elias.sarband"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6000),
                            CreatedUser = "elias.sarband",
                            Email = "",
                            FirstName = "Admin",
                            LastName = "AccurateCo",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 829, DateTimeKind.Local).AddTicks(7435),
                            Password = "dW/0ZNtG5T5uIyhEYh0J9Q==",
                            PhoneNumber = "9125056182",
                            Theme = "Light",
                            Username = "accurateco"
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "Sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6093),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6091),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6094),
                            CreatedUser = "elias.sarband",
                            ModifiedDate = new DateTime(2023, 5, 6, 9, 2, 33, 830, DateTimeKind.Local).AddTicks(6093),
                            RoleId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.BasicInformation", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformationCategory", "Category")
                        .WithMany("BasicInformations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "RelatedBasicInformation")
                        .WithMany("BasicInformations")
                        .HasForeignKey("RelatedBasicInformationId");

                    b.Navigation("Category");

                    b.Navigation("RelatedBasicInformation");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.BasicInformationCategory", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformationCategory", "RelatedCategory")
                        .WithMany("BasicInformationCategories")
                        .HasForeignKey("RelatedCategoryId");

                    b.Navigation("RelatedCategory");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Bed", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Department", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Department", "MainDepartment")
                        .WithMany()
                        .HasForeignKey("MainDepartmentId");

                    b.Navigation("MainDepartment");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Form", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.FormCategory", "FormCategory")
                        .WithMany("Forms")
                        .HasForeignKey("FormCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormCategory");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.FormAction", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Form", "Form")
                        .WithMany("FormActions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.FormActionAccess", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.FormAction", "FormAction")
                        .WithMany()
                        .HasForeignKey("FormActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("Hospital.Domain.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("FormAction");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.GroupUser", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Group", "Group")
                        .WithMany("GroupUsers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.User", "User")
                        .WithMany("GroupUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisteration", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId");

                    b.HasOne("Hospital.Domain.Core.Entities.Staff", "ConsultantIncharge")
                        .WithMany()
                        .HasForeignKey("ConsultantInchargeId");

                    b.HasOne("Hospital.Domain.Core.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.RefferBy", "RefferBy")
                        .WithMany()
                        .HasForeignKey("RefferById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Relationship")
                        .WithMany()
                        .HasForeignKey("RelationshipId");

                    b.HasOne("Hospital.Domain.Core.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("Hospital.Domain.Core.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId");

                    b.HasOne("Hospital.Domain.Core.Entities.Staff", "SecondConsultant")
                        .WithMany()
                        .HasForeignKey("SecondConsultantId");

                    b.HasOne("Hospital.Domain.Core.Entities.Staff", "ThirdConsultant")
                        .WithMany()
                        .HasForeignKey("ThirdConsultantId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId");

                    b.Navigation("Bed");

                    b.Navigation("CaseType");

                    b.Navigation("ConsultantIncharge");

                    b.Navigation("Patient");

                    b.Navigation("RefferBy");

                    b.Navigation("Relationship");

                    b.Navigation("Room");

                    b.Navigation("RoomType");

                    b.Navigation("SecondConsultant");

                    b.Navigation("ThirdConsultant");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisterationPayment", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.IPDRegisteration", "IPDRegisteration")
                        .WithMany("IPDRegisterationPayments")
                        .HasForeignKey("IPDRegisterationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IPDRegisteration");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisterationRoom", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.IPDRegisteration", "IPDRegisteration")
                        .WithMany("IPDRegisterationRooms")
                        .HasForeignKey("IPDRegisterationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("IPDRegisteration");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisterationService", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.IPDRegisteration", "IPDRegisteration")
                        .WithMany("IPDRegisterationServices")
                        .HasForeignKey("IPDRegisterationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IPDRegisteration");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Insurance", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "InsurancePaymentType")
                        .WithMany()
                        .HasForeignKey("InsurancePaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsurancePaymentType");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.InsuranceAgreement", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("Hospital.Domain.Core.Entities.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("Insurance");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBill", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBillPayment", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.OPDBill", "OPDBill")
                        .WithMany("OPDBillPayments")
                        .HasForeignKey("OPDBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPDBill");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBillService", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.OPDBill", "OPDBill")
                        .WithMany("OPDBillServices")
                        .HasForeignKey("OPDBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPDBill");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Patient", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Hospital.Domain.Core.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Hospital.Domain.Core.Entities.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "NamePrefix")
                        .WithMany()
                        .HasForeignKey("NamePrefixId");

                    b.HasOne("Hospital.Domain.Core.Entities.RefferBy", "RefferBy")
                        .WithMany()
                        .HasForeignKey("RefferById");

                    b.Navigation("Area");

                    b.Navigation("Attachment");

                    b.Navigation("City");

                    b.Navigation("Gender");

                    b.Navigation("Insurance");

                    b.Navigation("NamePrefix");

                    b.Navigation("RefferBy");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.RefferBy", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "NamePrefix")
                        .WithMany()
                        .HasForeignKey("NamePrefixId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Speciality")
                        .WithMany()
                        .HasForeignKey("SpecialityId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "StaffType")
                        .WithMany()
                        .HasForeignKey("StaffTypeId");

                    b.Navigation("Area");

                    b.Navigation("City");

                    b.Navigation("NamePrefix");

                    b.Navigation("Qualification");

                    b.Navigation("Speciality");

                    b.Navigation("StaffType");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Room", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.RoomType", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Service", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Staff", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "NamePrefix")
                        .WithMany()
                        .HasForeignKey("NamePrefixId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "Speciality")
                        .WithMany()
                        .HasForeignKey("SpecialityId");

                    b.HasOne("Hospital.Domain.Core.Entities.BasicInformation", "StaffType")
                        .WithMany()
                        .HasForeignKey("StaffTypeId");

                    b.Navigation("Area");

                    b.Navigation("City");

                    b.Navigation("NamePrefix");

                    b.Navigation("Qualification");

                    b.Navigation("Speciality");

                    b.Navigation("StaffType");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.StaffTiming", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Staff", "Staff")
                        .WithMany("StaffTimings")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.User", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.UserRole", b =>
                {
                    b.HasOne("Hospital.Domain.Core.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.Domain.Core.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.BasicInformation", b =>
                {
                    b.Navigation("BasicInformations");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.BasicInformationCategory", b =>
                {
                    b.Navigation("BasicInformationCategories");

                    b.Navigation("BasicInformations");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Form", b =>
                {
                    b.Navigation("FormActions");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.FormCategory", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Group", b =>
                {
                    b.Navigation("GroupUsers");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.IPDRegisteration", b =>
                {
                    b.Navigation("IPDRegisterationPayments");

                    b.Navigation("IPDRegisterationRooms");

                    b.Navigation("IPDRegisterationServices");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.OPDBill", b =>
                {
                    b.Navigation("OPDBillPayments");

                    b.Navigation("OPDBillServices");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.Staff", b =>
                {
                    b.Navigation("StaffTimings");
                });

            modelBuilder.Entity("Hospital.Domain.Core.Entities.User", b =>
                {
                    b.Navigation("GroupUsers");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
