@page "/ReportTemplatesSelect/{ReportCode}/{Id:int}"
@using Hospital.Application.Commands
@using Hospital.Application.Queries
@using Hospital.Application.Responses
@using Hospital.Application.ViewModels
@using Hospital.Domain.Core.Entities;
@using MediatR
@inject IMediator mediator;
@inject IDialogService DialogService
@inject ISnackbar Snackbar

@attribute [Authorize(Roles = "Super,Admin")]

<MudGrid Class="mt-2">
    <MudItem md="12">
        <MudPaper Class="mt-2" Elevation="10">
            <MudCard Class="pl-2 pr-2 mt-2">
                <MudCardHeader>Report Templates</MudCardHeader>
                <MudCardActions>
                    
                </MudCardActions>
                <MudCardContent>
                    <MudTable @ref="@_table" Items="@Elements" RowsPerPage="5" Hover="true" FixedHeader="true" FixedFooter="true" Striped="true" Breakpoint="Breakpoint.Sm" Class="" Loading="@loading" LoadingProgressColor="Color.Info" Filter="new Func<ReportTemplateViewModel,bool>(FilterReportTemplateInit)">
                        <ToolBarContent>
                            <MudSpacer />
                            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Clearable></MudTextField>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>Code</MudTh>
                            <MudTh>Name</MudTh>
                            <MudTh>Select</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Code">@context.Code</MudTd>
                            <MudTd DataLabel="Name">@context.Name</MudTd>
                            <MudTd DataLabel="Select">
                                <MudIconButton ButtonType="MudBlazor.ButtonType.Button" Icon="@Icons.Material.Filled.ShowChart" Color="Color.Primary" Href=@String.Format("ReportShow/{0}/{1}",context.Id,Id)></MudIconButton>
                            </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudPagination ShowFirstButton="true" ShowLastButton="true" SelectedChanged="PageChanged" Count="@((_table.GetFilteredItemsCount() + _table.RowsPerPage - 1) / _table.RowsPerPage)" Class="pa-4" />
                        </PagerContent>
                    </MudTable>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    </MudItem>
</MudGrid>



@code {
    [Parameter]
    public string ReportCode { get; set; }
    [Parameter]
    public int Id { get; set; }
    private MudTable<ReportTemplateViewModel> _table;
    private List<ReportTemplateViewModel> Elements;
    private bool loading = false;
    private string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        Elements = await mediator.Send(new GetReportTemplateByCodeQuery(ReportCode));
    }

    private void PageChanged(int i)
    {
        _table.NavigateTo(i - 1);
    }

    private bool FilterReportTemplateInit(ReportTemplateViewModel element) => FilterReportTemplate(element, searchString);

    private bool FilterReportTemplate(ReportTemplateViewModel element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Code.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Code} {element.Name}".Contains(searchString))
            return true;
        return false;
    }

    

}
