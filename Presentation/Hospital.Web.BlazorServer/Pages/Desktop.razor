@page "/Desktop"
@using Hospital.Application.Queries;
@using Hospital.Web.BlazorServer.Helpers;
@using Hospital.Web.BlazorServer.Models.Auth
@using System.Threading
@using MediatR;
@implements IDisposable
@inject IMediator mediator;
@inject NavigationManager navManager
@inject IHttpContextAccessor accessor

@attribute [Authorize]

<PageTitle>Desktop - HMIS System</PageTitle>

<style>
.zoom {
  transition: transform .2s; /* Animation */
        background-size: cover;
 }

.zoom:hover {
  transform: scale(1.1); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
}
</style>
<PageTitle>Index</PageTitle>

<MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
            <MudText Typo="Typo.subtitle2">
                @theDate
            </MudText>
            <MudText Typo="Typo.subtitle1">
                @theTime
            </MudText>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => AppointmentClick())">
                <MudImage Src="images/Dashboard/Appointment.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Appointment</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => OPDIPDClick())">
                <MudImage Src="images/Dashboard/registerform.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">OPD / IPD</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => PrecryptionClick())">
                <MudImage Src="images/Dashboard/Precryption.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">E-Precryption</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => LabratoryClick())">
                <MudImage Src="images/Dashboard/Laboratory.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Labratory</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => PharmacyClick())">
                <MudImage Src="images/Dashboard/Pharmacy.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Pharmacy</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => FinancialClick())">
                <MudImage Src="images/Dashboard/Financial.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Financial</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => HRClick())">
                <MudImage Src="images/Dashboard/HR.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Human Resources</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => SettingClick())">
                <MudImage Src="images/Dashboard/Setting.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Setting</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-1 zoom" Style="height: 200px;" @onclick="( () => ReportsClick())">
                <MudImage Src="images/Dashboard/Reports.jpeg" Height="150" ObjectFit="ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="card-img"></MudImage>
                <MudText Class="text-secondary mt-2">Reports</MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    [CascadingParameter]
    public LoginedUser? userInfo { get; set; }

    string theTime;
    string theDate;
    Timer aTimer;

    protected override async Task OnInitializedAsync()
    {
        if (userInfo == null)
        {
            IdentityHelper identityHelper = new IdentityHelper(accessor, mediator);
            userInfo = await identityHelper.GetUserInfo();
        }

        if (!(await mediator.Send(new CheckUserActionAccessQuery("Desktop", "View", userInfo.UserId))))
        {
            navManager.NavigateTo("AccessDenied/Desktop/View");
        }
    }
    protected override void OnInitialized()
    {
        aTimer = new Timer(Tick, null, 0, 1000);
        theDate = DateTime.Now.ToLongDateString();
    }

    private void Tick(object _)
    {
        theTime = DateTime.Now.ToLongTimeString();
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        aTimer?.Dispose();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

    }

    protected async Task AppointmentClick()
    {
        navManager.NavigateTo("AppointmentDashboard");
    }

    protected async Task OPDIPDClick()
    {
        navManager.NavigateTo("OPDIPDDashboard");
    }

    protected async Task PrecryptionClick()
    {
        navManager.NavigateTo("PrecryptionDashboard");
    }

    protected async Task LabratoryClick()
    {
        navManager.NavigateTo("LabratoryDashboard");
    }

    protected async Task PharmacyClick()
    {
        navManager.NavigateTo("PharmacyDashboard");
    }

    protected async Task FinancialClick()
    {
        navManager.NavigateTo("FinancialDashboard");
    }

    protected async Task HRClick()
    {
        navManager.NavigateTo("HRDashboard");
    }

    protected async Task SettingClick()
    {
        navManager.NavigateTo("SettingDashboard");
    }

    protected async Task ReportsClick()
    {
        navManager.NavigateTo("ReportsDashboard");
    }
}