@page "/ReportShow/{ReportId:int}/{Id:int}"
@using Hospital.Application.Commands;
@using Hospital.Application.Mapper;
@using Hospital.Application.Queries;
@using Hospital.Application.Responses;
@using Hospital.Application.ViewModels;
@using Hospital.Web.BlazorServer.Helpers;
@using Hospital.Web.BlazorServer.Models.Auth;

@using Stimulsoft.Base
@using Stimulsoft.Report
@using Stimulsoft.Report.Blazor
@using Stimulsoft.Report.Dictionary
@using Stimulsoft.Report.Web
@using MediatR
@using System.Drawing.Printing;
@inject IMediator mediator
@inject NavigationManager navManager
@inject ISnackbar Snackbar

@attribute [Authorize(Roles = "Super,Admin,User")]

<MudPaper Class="mt-4 pr-2 pl-2" Elevation="10">
    <MudGrid Class="mt-2">
        @*<MudItem md="12">
            <MudButton ButtonType="MudBlazor.ButtonType.Button" Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.KeyboardReturn" Href="OPDBills">Return</MudButton>
        </MudItem>*@
        <MudItem md="12">
            <StiBlazorViewer Report="@report" Height="800px" />
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int ReportId { get; set; }
    [CascadingParameter]
    public LoginedUser? userInfo { get; set; }
    private StiReport report;
    private ReportTemplateViewModel reportTemplate;


    protected override async Task OnInitializedAsync()
    {
        if(ReportId > 0)
        {
            reportTemplate = await mediator.Send(new GetReportTemplateByIdQuery(ReportId));

            if(reportTemplate.Code=="OPD")
            {
                var oPDBill = await mediator.Send(new GetOPDBillByIdQuery(Id));

                if (oPDBill != null)
                {
                    report = StiReport.CreateNewReport();

                    report.Dictionary.Databases.Clear();

                    if (reportTemplate != null)
                    {
                        report.LoadFromString(reportTemplate.Content);
                    }

                    report.RegBusinessObject("OPDBill", oPDBill);

                    var oPDBillServices = await mediator.Send(new GetOPDBillServicesByOPDBillIdQuery(Id));
                    report.RegBusinessObject("OPDBillServices", oPDBillServices);

                    var hospital = await mediator.Send(new GetHospitalInformationByIdQuery(1));
                    report.RegBusinessObject("HospitalInformation", hospital);

                    var patients = await mediator.Send(new GetPatientByIdQuery(oPDBill.PatientId));
                    report.RegBusinessObject("Patient", patients);

                    report.Dictionary.Synchronize();

                    //report.Print();

                    //base.OnInitialized();


                }
            }
            else if (reportTemplate.Code == "IPD")
            {
                var iPDRegisteration = await mediator.Send(new GetIPDRegisterationByIdQuery(Id));

                if (iPDRegisteration != null)
                {
                    report = StiReport.CreateNewReport();

                    report.Dictionary.Databases.Clear();

                    if (reportTemplate != null)
                    {
                        report.LoadFromString(reportTemplate.Content);
                    }

                    report.RegBusinessObject("IPDRegisteration", iPDRegisteration);

                    var iPDRegisterationRooms = await mediator.Send(new GetIPDRegisterationRoomsByIPDRegisterationIdQuery(iPDRegisteration.Id));
                    report.RegBusinessObject("IPDRegisterationRooms", iPDRegisterationRooms);

                    var iPDRegisterationServices = await mediator.Send(new GetIPDRegisterationServicesByIPDRegisterationIdQuery(iPDRegisteration.Id));
                    report.RegBusinessObject("IPDRegisterationServices", iPDRegisterationServices);

                    var iPDRegisterationPayments = await mediator.Send(new GetIPDRegisterationPaymentsByIPDRegisterationIdQuery(iPDRegisteration.Id));
                    report.RegBusinessObject("IPDRegisterationPayments", iPDRegisterationPayments);

                    var hospital = await mediator.Send(new GetHospitalInformationByIdQuery(1));
                    report.RegBusinessObject("HospitalInformation", hospital);

                    var patients = await mediator.Send(new GetPatientByIdQuery(iPDRegisteration.PatientId??0));
                    report.RegBusinessObject("Patient", patients);

                    report.Dictionary.Synchronize();

                    //report.Print();

                    //base.OnInitialized();


                }
            
            }

        //if (ReportCode=="OPDBill" && Id > 0)
        //{

        //    PrinterSettings settings = new PrinterSettings();
        //    string defaultPrinterName = settings.PrinterName;

        //    var oPDBill = await mediator.Send(new GetOPDBillByIdQuery(Id));

        //    if (oPDBill != null)
        //    {
        //        reportTemplate = await mediator.Send(new GetReportTemplateByCodeQuery(ReportCode));

        //        report = StiReport.CreateNewReport();

        //        report.Dictionary.Databases.Clear();

        //        if (reportTemplate != null)
        //        {
        //            report.LoadFromString(reportTemplate.Content);
        //        }
                
        //        report.RegBusinessObject("OPDBill", oPDBill);

        //        var oPDBillServices = await mediator.Send(new GetOPDBillServicesByOPDBillIdQuery(Id));
        //        report.RegBusinessObject("OPDBillServices", oPDBillServices);

        //        var hospital = await mediator.Send(new GetHospitalInformationByIdQuery(1));
        //        report.RegBusinessObject("HospitalInformation", hospital);

        //        var patients = await mediator.Send(new GetPatientByIdQuery(oPDBill.PatientId));
        //        report.RegBusinessObject("Patient", patients);

        //        report.Dictionary.Synchronize();

        //        //report.Print();

        //        //base.OnInitialized();


        //    }
        //}
        //else if (ReportCode == "IPDRegisteration" && Id > 0)
        //{

        //    PrinterSettings settings = new PrinterSettings();
        //    string defaultPrinterName = settings.PrinterName;

        //    var iPDRegisteration = await mediator.Send(new GetIPDRegisterationByIdQuery(Id));

        //    if (iPDRegisteration != null)
        //    {
        //        reportTemplate = await mediator.Send(new GetReportTemplateByCodeQuery(ReportCode));

        //        report = StiReport.CreateNewReport();

        //        report.Dictionary.Databases.Clear();

        //        if (reportTemplate != null)
        //        {
        //            report.LoadFromString(reportTemplate.Content);
        //        }

        //        report.RegBusinessObject("IPDRegisteration", iPDRegisteration);

        //        var iPDRegisterationRooms = await mediator.Send(new GetIPDRegisterationRoomsByIPDRegisterationIdQuery(iPDRegisteration.Id));
        //        report.RegBusinessObject("IPDRegisterationRooms", iPDRegisterationRooms);

        //        var iPDRegisterationServices = await mediator.Send(new GetIPDRegisterationServicesByIPDRegisterationIdQuery(iPDRegisteration.Id));
        //        report.RegBusinessObject("IPDRegisterationServices", iPDRegisterationServices);

        //        var iPDRegisterationPayments = await mediator.Send(new GetIPDRegisterationPaymentsByIPDRegisterationIdQuery(iPDRegisteration.Id));
        //        report.RegBusinessObject("IPDRegisterationPayments", iPDRegisterationPayments);

        //        var hospital = await mediator.Send(new GetHospitalInformationByIdQuery(1));
        //        report.RegBusinessObject("HospitalInformation", hospital);

        //        var patients = await mediator.Send(new GetPatientByIdQuery(iPDRegisteration.PatientId??0));
        //        report.RegBusinessObject("Patient", patients);

        //        report.Dictionary.Synchronize();

        //        //report.Print();

        //        //base.OnInitialized();


        //    }
        }

    }


}
